class Dishfave.DishIndexView extends QS.View
  @registerComponent 'df-dish-index'
  init : ->
    @dishes = new Dishfave.Dish.Collection(limit: 24, adapter_endpoint: "search")
    @location = new Dishfave.Location()
    @live_query = ko.observable("")
    @params = @app.path_params
    @tags = [
      {title: "All", name: "all"}
      {title: "Dinner", name: "dinner"}
      {title: "Lunch", name: "lunch"}
      {title: "Breakfast", name: "breakfast"}
      {title: "Dessert", name: "dessert"}
      {title: "Quick", name: "quick"}
      {title: "Healthy", name: "healthy"}
      {title: "Vegetarian", name: "vegetarian"}
      {title: "Vegan", name: "vegan"}
      {title: "Sides", name: "sides"}
      {title: "Drinks", name: "drinks"}

    ]

    @addComputed 'query', ->
      @params().q
    @addComputed 'location_id', ->
      l = @params().loc
      if QS.utils.isPresent(l)
        l.split("-").last()
      else
        null
    @addComputed 'type', ->
      t = @params().type
      return 'all' if QS.utils.isBlank(t)
      return t
    @addComputed 'order', ->
      @params().order || 'featured'
    @addComputed 'creator', ->
      @params().creator || 'all'
    @addComputed 'favorite', ->
      @params().favorite == 'true'
    @addComputed 'tag', ->
      @params().tag || 'all'
    @addComputed 'is_showing_all', ->
      for key in Object.keys(@params())
        if key != 'order'
          return false
      return true

    @addComputed 'can_load_more', ->
      @dishes.page() < @dishes.pages_count()

    @app.handle 'app.path_changed', @load
    @load()

  load : =>
    @loadDishes()
    @loadLocation()

  loadLocation : =>
    lid = @location_id()
    if QS.utils.isBlank(lid)
      @location.reset()
    else
      @location.load(id: lid)

  loadDishes : =>
    scope = {}
    sort = ""
    query = @query()
    creator = @creator()
    order = @order()
    fav = @favorite()
    tag = @tag()
    type = @type()
    lid = @location_id()
    uid = @app.current_user.id()
    if QS.utils.isPresent(uid)
      switch creator
        when 'me'
          scope.with_creator_id = uid
        when 'friends'
          scope.with_creator_in_followings_of = uid
    switch order
      when "popular"
        sort = "cached_favorites_count desc"
      when "quickest"
        sort = "prep_time_mins asc"
      when "featured"
        sort = "is_featured desc, created_at desc"
      else
        sort = "created_at desc"
    if QS.utils.isPresent(tag) && tag != 'all'
      scope.with_tag = tag
    if fav == true
      scope.is_favorite_of = uid
    if QS.utils.isPresent(query)
      scope.with_search_term = query
    if QS.utils.isPresent(lid)
      scope.with_location_near_location_id = lid
    if type == 'recipes'
      scope.with_public_recipe = true
    else if type == 'sold'
      scope.is_purchasable = true

    @dishes.load scope,
      includes: ['creator']
      sort: sort

  loadMoreDishes : =>
    @dishes.appendNextPage (resp)=>

  updateFilter : (opts)=>
    p = $.extend({}, @params(), opts)
    qs = $.param(p)
    @app.redirectTo("?#{qs}")

  handleSearchEnter : =>
    @updateFilter(q: @live_query())


<template name="df-dish-index" lang="haml">
.container-fluid.recipes-container
  .header-space

  .recipes-content
    .recipes-filter
      .links
        %i.fa.fa-filter.fa-fw.mr-5(style="font-size: 1.5rem;")
        %a(data-bind="on.click : updateFilter({type: 'all'}), css.active : type() == 'all'")
          All
        %a(data-bind="on.click : updateFilter({type: 'sold'}), css.active : type() == 'sold'")
          Sold In Store
        %a(data-bind="on.click : updateFilter({type: 'recipes'}), css.active : type() == 'recipes'")
          Make It Yourself
        {{#if : app.is_logged_in() && app.display_layout_desktop() }}
        %span.text-muted •
        %a(data-bind="on.click : updateFilter({creator: 'friends'}), css.active : creator() == 'friends'")
          My Friends&#8217; Dishes
        %a(data-bind="on.click : updateFilter({creator: 'me'}), css.active : creator() == 'me'")
          My Dishes
        %a(data-bind="on.click : updateFilter({favorite: 'true'}), css.active : favorite() == true")
          My Favorites
        {{/if }}

        %span.text-muted •
        %a(data-bind="on.click : updateFilter({order: 'featured'}), css.active : order()== 'featured'")
          Featured
        %a(data-bind="on.click : updateFilter({order: 'newest'}), css.active : order()== 'newest'")
          Newest
        %a(data-bind="on.click : updateFilter({order: 'popular'}), css.active : order() == 'popular'")
          Popular

        %span.text-muted •
        .dropdown.inline
          %a.dropdown-toggle(data-toggle="dropdown")
            More filters
            %span.caret
          .dropdown-menu.dropdown-menu-right(style="width: 250px;")
            .col-xs-6
              .dropdown-section-header Created By
              .dropdown-section-body
                %a.menu-option(data-bind="on.click : updateFilter({creator: 'all'}), css.active : creator() == 'all'") Everyone
                {{#if : app.is_logged_in() }}
                %a.menu-option(data-bind="on.click : updateFilter({creator: 'friends'}), css.active : creator() == 'friends'") My Friends
                %a.menu-option(data-bind="on.click : updateFilter({creator: 'me'}), css.active : creator() == 'me'") Me
                {{/if }}

              .dropdown-section-header Order By
              .dropdown-section-body
                %a.menu-option(data-bind="on.click : updateFilter({order: 'featured'}), css.active : order() == 'featured'") Featured
                %a.menu-option(data-bind="on.click : updateFilter({order: 'newest'}), css.active : order() == 'newest'") Newest
                %a.menu-option(data-bind="on.click : updateFilter({order: 'popular'}), css.active : order() == 'popular'") Popular
                %a.menu-option(data-bind="on.click : updateFilter({order: 'quickest'}), css.active : order() == 'quickest'") Quickest

              {{#if : app.is_logged_in() }}
              .dropdown-section-header More
              .dropdown-section-body
                %a.menu-option(data-bind="on.click : updateFilter({favorites: true}), css.active : favorite() == true") Favorites
                %a.menu-option(data-bind="on.click : updateFilter({type: 'sold'}), css.active : type() == 'sold'") Sold In Store
                %a.menu-option(data-bind="on.click : updateFilter({type: 'recipes'}), css.active : type() == 'recipes'") Recipes
              {{/if }}

            .col-xs-6
              .dropdown-section-header Tags
              .dropdown-section-body
                {{#foreach : tags }}
                %a.menu-option(data-bind="on.click : $view.updateFilter({tag: name}), css.active : $view.tag() == name") {{ title }}
                {{/foreach }}


      .search-context
        {{#if : query.present() }}
        .context-item
          %i.fa.fa-search.fa-fw
          %a
            {{ query }}
          %a.clear(data-bind="on.click : updateFilter({q: ''})")
            clear
        {{/if }}
        {{#if : location.id.present() }}
        .context-item
          %i.fa.fa-map-marker.fa-fw
          %a
            {{ location.full_name }}
          %a.clear(data-bind="on.click : updateFilter({loc: ''})")
            clear
        {{/if }}
        {{#if : favorite() == true }}
        .context-item
          %i.fa.fa-heart.fa-fw
          %a
            My Favorites
          %a.clear(data-bind="on.click : updateFilter({favorite: false})")
            clear
        {{/if }}
        {{#if : creator() != 'all' }}
        .context-item
          %i.fa.fa-user.fa-fw
          %a
            {{ creator() == 'friends' ? 'By My Friends' : '' }}
            {{ creator() == 'me' ? 'Mine' : '' }}
          %a.clear(data-bind="on.click : updateFilter({creator: ''})")
            clear
        {{/if }}

    %df-dish-tile-grid(params="dishes : dishes")

    %df-dishes-load-more(params="dishes : dishes")

</template>

<style lang="scss">
.recipes-header h1 {
  color: white;
  text-align: center;
  text-shadow: 1px 1px 4px #444;
}

.recipes-content {
  margin: auto;
}

.recipes-search {
  background-color: #F2F2F2;
  box-shadow: 0px 0px 0px;
}

.recipes-content .recipes-search {
  padding: 14px;
  position: relative;
}

.recipes-content .recipes-search input {
  background-color: #F2F2F2;
  font-size: 20px;
  padding: 14px;
  border: none;
  width: 100%;
  color: #555;
}

.recipes-content .recipes-search input:focus {
  outline: none;
}


.recipes-search i {
  color: black;

}


.recipe-status .recipes-status-all {
  padding: 10px;
  border: none;
  width: 95%;
  text-align: right;
}

.recipes-filter a {
  font-size: 1.5rem;
  color: #555555;
  padding: 5px 5px;
  font-weight: 100;
}
.recipes-filter i {
  font-size: 1.5rem;
  color: #777;
}

.recipes-filter a.active {
  text-decoration: underline;
}
.recipes-content .recipes-status a {
  float: right;
  margin: 5px;
  color: #555555;
}

.recipes-filter {
  .context-item {
    display: inline-block;
    margin-right: 10px;
  }
  a.clear {
    font-size: 1.1rem;
    color: #777;
  }
}


</style>
