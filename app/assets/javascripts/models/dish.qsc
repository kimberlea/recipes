class Dishfave.Dish extends QS.Model
  @includeCollection()
  @includeAdapter
    load_url: '/dishes'
    save_url: '/dish'
    endpoints:
      import_from_url: '/dishes/import_from_url'

  init : =>
    @addFields ['title', 'description', 'description_html', 'ingredients', 'directions', 'purchase_info', 'image_url', 'view_path', 'view_url'], ''
    @addFields ['is_purchasable', 'is_private', 'is_recipe_private'], false
    @addFields ['is_recipe_given'], true
    @addFields ['prep_time_mins', 'serving_size'], null
    @addFields ['tags'], []
    @addFields ['favorites_count', 'ratings_count', 'ratings_avg'], 0
    @addFields ['prep_time_details'], {}
    @addFields ['created_at'], 0
    @created_at.extend(date: true)

    @addSubModel 'image', Dishfave.DishImageUpload
    @addSubModel 'creator', Dishfave.User, true
    @addSubModel 'user_reaction', Dishfave.UserReaction, true

    @addComputed 'is_recipe_not_given',
      read: ->
        !@is_recipe_given()
      write: (val)->
        @is_recipe_given(!val)

    @addComputed 'tags_str',
      read: ->
        return "" if @tags() == null
        @tags().join(", ")
      write: (val)->
        return if QS.utils.isBlank(val)
        @tags(val.split(",").map((t)->t.trim()))

    @addComputed 'has_ratings', ->
      r = @ratings_avg()
      return r? && r > 0
