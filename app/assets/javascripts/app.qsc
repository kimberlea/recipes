class Dishfave.Application extends QS.Application
  init : =>
    @opts.update_title = false
    @opts.handle_links = false
    @user_service = new Dishfave.UserService(this)
    @is_loaded = ko.observable(false)
    @setUser(@opts.current_user)
    @sign_in_modal = new Dishfave.SignInView("sign-in", this)
    @loaded_modules = ko.observable({})

    @addComputed 'display_info', ->
      width = @app.window_bounds().width
      ret = {}
      if width < 768
        l = 'mobile'
        sl = 'phone'
      else if width < 992
        l = 'mobile'
        sl = 'tablet'
      else
        l = 'desktop'
        sl = 'desktop'
      return {layout: l, sublayout: sl}
    @addComputed 'display_layout_desktop', ->
      @display_info().layout == 'desktop'
    @addComputed 'display_layout_mobile', ->
      @display_info().layout == 'mobile'
    @addComputed 'body_classes', ->
      d = @display_info()
      l = d.layout; sl = d.sublayout
      "layout-#{l} layout-#{l}-#{sl}"


  loadModule : (name)=>
    Modulr.load
      modules: [name],
      callback: (success)=>
        if success
          @loaded_modules()[name] = true
          @loaded_modules.valueHasMutated()

  showModalFromURL : window.showModalFromURL

  promptAuthentication : (opts={})=>
    if @is_logged_in()
      opts.onLogin?()
    else
      @sign_in_modal.load(opts)
      if !@sign_in_modal.is_visible()
        @sign_in_modal.showAsModal(@sign_in_modal.templateID, {})

  afterRender : ->
    @is_loaded(true)


class Dishfave.AdminView extends QS.View
  init : ->
    @recipe_url = ko.observable("")

  importRecipe : =>
    Dishfave.Dish.Adapter.import_from_url
      data:
        url: @recipe_url()
      loading : @is_saving
      callback: (resp)=>
        if resp.success
          $.confirm
            title: "Dish saved."
            content: "Dish successfully saved."
            columnClass: "small"
            buttons:
              view: =>
                @app.navigateTo(resp.data.view_path)
              done: =>
        else
          $.alert(resp.error)
